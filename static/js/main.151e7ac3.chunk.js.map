{"version":3,"sources":["actions/login.js","actions/index.js","pages/Login.js","components/RecipeCard.jsx","components/Loading.jsx","actions/recipes.js","components/CategoryButton.jsx","components/ProfileIcon.jsx","components/SearchBar.jsx","components/Header.jsx","components/Footer.js","pages/Main.jsx","pages/Explore.js","pages/ExploreMain.js","pages/ExploreIngredients.js","pages/ExploreOrigin.js","components/IngredientsList.jsx","components/ProgressButton.jsx","components/FavButton.jsx","components/ShareButton.jsx","pages/RecipeDetails.jsx","pages/Profile.js","pages/RecipesDoneAndFavorite.js","pages/NotFound.js","App.js","serviceWorker.js","reducers/login.js","reducers/recipes.js","reducers/index.js","store/index.js","index.js","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","images/shareIcon.svg"],"names":["addTokenMeal","payload","type","addUser","login","email","dispatch","a","Login","useDispatch","useState","setEmail","password","setPassword","redirect","setRedirect","useSelector","state","mealsToken","user","cocktailsToken","useEffect","localStorage","setItem","JSON","stringify","to","className","onSubmit","event","preventDefault","Form","Group","Label","Control","data-testid","value","onChange","target","placeholder","Button","block","disabled","isValidEmail","test","length","validation","variant","RecipeCard","index","recipe","recommendation","Card","border","id","Img","src","image","alt","name","Body","Text","category","alcoholicOrNot","Title","defaultProps","Loading","addRecipes","addFilter","formatedObject","obj","apiType","strArea","area","strCategory","strAlcoholic","strTags","tags","split","searchObject","slice","fetchRecipes","token","request","key","parameter","typeApi","url","domains","comidas","bebidas","fetch","data","json","recipes","map","addCategories","addRecommendations","startRecipe","selectedType","byAddIngredient","CategoryButton","selectedFilter","filter","pathname","useLocation","onClick","reqType","click","size","ProfileIcon","history","useHistory","role","profileIcon","push","SearchBar","setFilter","searchText","setSearchText","show","setShow","e","Check","inline","label","alert","filterRecipes","Alert","style","marginTop","Date","now","Heading","Header","renderHeader","useRef","headerTitle","setHeaderTitle","searchIcon","setSearchIcon","searchBar","setSearchBar","current","Row","Col","searchSvg","Footer","drinkIcon","exploreIcon","mealIcon","Main","location","list","isFetching","categories","byIngredient","urlOpt","categoriesArray","fetchCategories","Explore","ExploreMain","setId","prevList","ExploreIngredients","shouldRedirect","setShouldRedirect","handleClick","ingredient","idIngredient","strIngredient","strIngredient1","ExploreOrigin","areas","selectArea","setSelectArea","lenght","controlId","as","custom","meals","IngredientsList","ingredients","start","inProgress","usedIngredients","setUsedIngredients","cocktails","ingsAndMsr","htmlFor","Input","checked","includes","ing","handleChange","ProgressButton","ingredientsLength","done","refDone","some","currId","currType","startsWith","Object","keys","FavButton","favorite","fav","find","favObj","addFavorite","undefined","BlackFavIcon","FavIcon","width","ShareButton","copied","setCopied","copy","ShareIcon","RecipeDetails","params","match","recommendations","shouldFetch","setShouldFetch","recommendationsType","fetchRecommendations","IngredientsAndMeasures","ingKey","strInstructions","strYoutube","join","title","responsive","tablet","breakpoint","max","min","items","mobile","Profile","userEmail","setUserEmail","parse","getItem","clear","RecipesDoneAndFavorite","setRecipes","isDone","setIsDone","endsWith","console","log","doneDate","tag","tagIndex","NotFound","App","path","render","props","component","exact","Boolean","window","hostname","INITIAL_STATE","action","inProgressRecipes","favoriteRecipes","doneRecipes","toLocaleDateString","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.151e7ac3.chunk.js","sourcesContent":["import { ADD_TOKEN_DRINK, ADD_TOKEN_MEAL, ADD_USER } from './index';\n\nconst addTokenMeal = (payload) => ({\n  type: ADD_TOKEN_MEAL,\n  payload,\n});\n\nconst addTokenDrink = (payload) => ({\n  type: ADD_TOKEN_DRINK,\n  payload,\n});\n\nconst addUser = (payload) => ({\n  type: ADD_USER,\n  payload,\n});\n\nconst login = (email) => (async (dispatch) => {\n  const mealToken = 1;\n  const drinkToken = 1;\n  dispatch(addTokenDrink(drinkToken));\n  dispatch(addTokenMeal(mealToken));\n  dispatch(addUser(email));\n});\n\nexport default login;\n","export const REQUEST_RECIPES = 'REQUEST_RECIPES';\nexport const ADD_RECIPES = 'ADD_RECIPES';\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';\nexport const ADD_FILTER = 'ADD_FILTER';\nexport const ADD_RECOMMENDATIONS = 'ADD_RECOMMENDATIONS';\nexport const ADD_TOKEN_MEAL = 'ADD_TOKEN_MEAL';\nexport const ADD_TOKEN_DRINK = 'ADD_TOKEN_DRINK';\nexport const ADD_USER = 'ADD_USER';\nexport const ADD_BYINGREDIENT = 'ADD_BYINGREDIENT';\nexport const START_RECIPE = 'START_RECIPE';\nexport const END_RECIPE = 'END_RECIPE';\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const RM_FAVORITE = 'RM_FAVORITE';\nexport const ADD_COUNTRIES = 'ADD_COUNTRIES';\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Button, Form } from 'react-bootstrap';\nimport login from '../actions/login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.css';\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const { mealsToken, email: user, cocktailsToken } = useSelector((state) => state.login);\n\n  const validation = () => {\n    const minPasswordSize = 6;\n    const regex = /.+@[A-z]+[.]com/;\n    const isValidEmail = regex.test(email);\n    const isValidPassword = password.length > minPasswordSize;\n    if (isValidPassword && isValidEmail) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(login(email));\n  };\n\n  useEffect(() => {\n    if (user !== '') {\n      localStorage.setItem('mealsToken', mealsToken);\n      localStorage.setItem('user', JSON.stringify({ email: user }));\n      localStorage.setItem('cocktailsToken', cocktailsToken);\n      setRedirect(true);\n    }\n  }, [user]);\n\n  if (redirect) return <Redirect to=\"/comidas\" />;\n\n  return (\n    <section className=\"login\">\n      <form className=\"form\" onSubmit={ handleSubmit }>\n        <Form.Group>\n          <Form.Label>Email:</Form.Label>\n          <Form.Control\n            data-testid=\"email-input\"\n            type=\"text\"\n            value={ email }\n            onChange={ ({ target }) => setEmail(target.value) }\n            placeholder=\"Email\"\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Senha:</Form.Label>\n          <Form.Control\n            data-testid=\"password-input\"\n            type=\"password\"\n            value={ password }\n            onChange={ ({ target }) => setPassword(target.value) }\n            placeholder=\"Senha\"\n          />\n        </Form.Group>\n\n        <Button\n          block\n          className=\"custom-btn\"\n          data-testid=\"login-submit-btn\"\n          disabled={ validation() }\n          type=\"submit\"\n          variant=\"primary\"\n        >\n          Entrar\n        </Button>\n      </form>\n    </section>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport './RecipeCard.css';\n\nfunction RecipeCard({ type, index, recipe, recommendation }) {\n  return (\n    <Card border=\"dark\" className=\"card\">\n      <Link\n        to={ `/${type}/${recipe.id}` }\n        data-testid={ `${index}-recipe-card` }\n      >\n        <Card.Img\n          className=\"card-img\"\n          data-testid={ `${index}-card-img` }\n          src={ recipe.image }\n          alt={ recipe.name }\n        />\n        <Card.Body className=\"card-body\">\n          { recommendation && (\n            <Card.Text>\n              { type === 'comidas' ? recipe.category : recipe.alcoholicOrNot }\n            </Card.Text>) }\n          <Card.Title\n            className=\"recipe-name\"\n            data-testid={\n              recommendation ? `${index}-recomendation-title` : `${index}-card-name`\n            }\n          >\n            { recipe.name }\n          </Card.Title>\n        </Card.Body>\n      </Link>\n    </Card>\n  );\n}\n\nRecipeCard.defaultProps = {\n  recommendation: false,\n};\n\nRecipeCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape().isRequired,\n  recommendation: PropTypes.bool,\n};\n\nexport default RecipeCard;\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <p>Loading...</p>\n  );\n}\n\nexport default Loading;\n","import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES,\n  ADD_RECOMMENDATIONS, END_RECIPE, REQUEST_RECIPES, RM_FAVORITE,\n  START_RECIPE, ADD_BYINGREDIENT, ADD_COUNTRIES } from './index';\n\nconst addRecipes = (payload) => ({\n  type: ADD_RECIPES,\n  payload,\n});\n\nconst requestRecipes = () => ({\n  type: REQUEST_RECIPES,\n});\n\nconst addFilter = (payload) => ({\n  type: ADD_FILTER,\n  payload,\n});\n\nconst formatedObject = (obj, type) => {\n  const apiType = type === 'comidas' ? 'Meal' : 'Drink';\n  const { strArea: area = '', strCategory: category = '',\n    strAlcoholic: alcoholicOrNot = '', [`str${apiType}`]: name,\n    [`str${apiType}Thumb`]: image, strTags } = obj;\n  const tags = !strTags ? [] : strTags.split(',');\n  const idApi = `id${apiType}`;\n  const id = obj[idApi];\n  const searchObject = {\n    id, area, category, alcoholicOrNot, name, image, type: type.slice(0, 0 - 1), tags };\n  // if (key === 'i') {\n  //   const IngredientKeys = Object.keys(obj)\n  //     .filter((ingKey) => (\n  //       ingKey\n  //         .startsWith('strIngredient')\n  //     && obj[ingKey] !== '' && obj[ingKey] !== null));\n  //   const measureKeys = IngredientKeys\n  //     .map((_, index) => obj[`strMeasure${index + 1}`]);\n  //   const ingredients = IngredientKeys\n  //     .reduce((acc, curr) => ({ ...acc, [curr]: obj[curr] }), {});\n  //   const measures = measureKeys\n  //     .reduce((acc, curr) => ({ ...acc, [curr]: obj[curr] }), {});\n  //   return { ...searchObject, ...ingredients, ...measures };\n  // }\n  return { ...obj, ...searchObject };\n};\n\nexport const fetchRecipes = (token, type = 'comidas',\n  { request = 'search', key = 's', parameter = '' } = {}) => (\n  async (dispatch) => {\n    const filter = request === 'filter' ? parameter : '';\n    dispatch(addFilter(filter));\n    dispatch(requestRecipes());\n    const typeApi = type === 'comidas' ? 'meals' : 'drinks';\n    const domains = { comidas: 'themealdb', bebidas: 'thecocktaildb' };\n    let url = `https://www.${domains[type]}.com/api/json/v1/${token}/${request}.php?${key}=${parameter}`;\n    if (!key) url = `https://www.${domains[type]}.com/api/json/v1/${token}/${request}.php`;\n    try {\n      const data = await fetch(url);\n      const { [typeApi]: recipes } = await data.json();\n      dispatch(addRecipes(recipes.map((recipe) => formatedObject(recipe, type))));\n    } catch (error) {\n      dispatch(addRecipes([]));\n    }\n  }\n);\n\nconst addCategories = (payload) => ({\n  type: ADD_CATEGORIES,\n  payload,\n});\n\nexport const fetchCategories = (token, type = 'comidas') => (\n  async (dispatch) => {\n    const urlOpt = { comidas: `https://www.themealdb.com/api/json/v1/${token}/list.php?c=list`,\n      bebidas: `https://www.thecocktaildb.com/api/json/v1/${token}/list.php?c=list` };\n    const data = await fetch(urlOpt[type]);\n    const typeApi = type === 'comidas' ? 'meals' : 'drinks';\n    const { [typeApi]: categories } = await data.json();\n    const CATEGORIES_NUMBER = 5;\n    const categoriesArray = categories.slice(0, CATEGORIES_NUMBER)\n      .map(({ strCategory }) => strCategory);\n    dispatch(addCategories(categoriesArray));\n  }\n);\n\nconst addRecommendations = (payload) => ({\n  type: ADD_RECOMMENDATIONS,\n  payload,\n});\n\nexport const fetchRecommendations = (token, type = 'comidas') => (\n  async (dispatch) => {\n    const domains = { comidas: 'themealdb', bebidas: 'thecocktaildb' };\n    const url = `https://www.${domains[type]}.com/api/json/v1/${token}/search.php?s=`;\n    const data = await fetch(url);\n    const typeApi = type === 'comidas' ? 'meals' : 'drinks';\n    const { [typeApi]: recipes } = await data.json();\n    dispatch(addRecommendations(recipes.map((recipe) => formatedObject(recipe, type))));\n  }\n);\n\nexport const startRecipe = (selectedType, payload) => ({\n  selectedType,\n  type: START_RECIPE,\n  payload,\n});\n\nexport const endRecipe = (payload) => ({\n  type: END_RECIPE,\n  payload,\n});\n\nexport const addFavorite = (payload) => ({\n  type: ADD_FAVORITE,\n  payload,\n});\n\nexport const removeFavorite = (payload) => ({\n  type: RM_FAVORITE,\n  payload,\n});\n\nexport const byAddIngredient = (payload) => ({\n  type: ADD_BYINGREDIENT,\n  payload,\n});\n\nconst addAreas = (payload) => ({\n  type: ADD_COUNTRIES,\n  payload,\n});\n\nexport const fetchAreas = (token) => (\n  async (dispatch) => {\n    const url = `https://www.themealdb.com/api/json/v1/${token}/list.php?a=list`;\n    const data = await fetch(url);\n    const areas = await data.json();\n    dispatch(addAreas(areas));\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\nimport { fetchRecipes } from '../actions/recipes';\n\nfunction CategoryButton({ name, type }) {\n  const selectedFilter = useSelector((state) => state.recipes.filter);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n\n  const click = (category) => {\n    const reqType = { request: 'filter', key: 'c', parameter: category };\n    const token = pathname === 'comidas' ? mealsToken : cocktailsToken;\n    if (selectedFilter === category || category === 'All') {\n      dispatch(fetchRecipes(token, type));\n    } else dispatch(fetchRecipes(token, type, reqType));\n  };\n\n  return (\n    <Button\n      className=\"custom-btn\"\n      data-testid={ `${name}-category-filter` }\n      onClick={ () => click(name) }\n      size=\"sm\"\n      type=\"button\"\n      variant=\"primary\"\n    >\n      {name}\n    </Button>\n  );\n}\n\nCategoryButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\n\nconst ProfileIcon = () => {\n  const history = useHistory();\n  return (\n    <img\n      role=\"presentation\"\n      data-testid=\"profile-top-btn\"\n      src={ profileIcon }\n      alt=\"profile-btn\"\n      onClick={ () => history.push('/perfil') }\n    />\n  );\n};\n\nexport default ProfileIcon;\n","import React, { useState } from 'react';\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { fetchRecipes } from '../actions/recipes';\nimport './SearchBar.css';\n\nconst SearchBar = () => {\n  const [filter, setFilter] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n\n  const filterRecipes = (e) => {\n    e.preventDefault();\n    setShow(false);\n    if (filter === 'f' && searchText.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n      setShow(true);\n      return;\n    }\n    const token = pathname === 'comidas' ? mealsToken : cocktailsToken;\n    if (filter === 'i') {\n      dispatch(fetchRecipes(token, pathname.slice(1),\n        { request: 'filter', key: filter, parameter: searchText }));\n      return;\n    }\n    dispatch(\n      fetchRecipes(token, pathname.slice(1), { key: filter, parameter: searchText }),\n    );\n    setSearchText('');\n  };\n\n  return (\n    <>\n      <Form className=\"search-bar\">\n        <Form.Label>Campo de busca:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          data-testid=\"search-input\"\n          value={ searchText }\n          onChange={ (e) => setSearchText(e.target.value) }\n        />\n        <Form.Check\n          data-testid=\"ingredient-search-radio\"\n          inline\n          label=\"Ingrediente\"\n          name=\"filter\"\n          onClick={ (e) => setFilter(e.target.value) }\n          type=\"radio\"\n          value=\"i\"\n        />\n        <Form.Check\n          data-testid=\"name-search-radio\"\n          inline\n          label=\"Nome\"\n          name=\"filter\"\n          onClick={ (e) => setFilter(e.target.value) }\n          type=\"radio\"\n          value=\"s\"\n        />\n        <Form.Check\n          data-testid=\"first-letter-search-radio\"\n          inline\n          label=\"Primeira letra\"\n          name=\"filter\"\n          onClick={ (e) => setFilter(e.target.value) }\n          type=\"radio\"\n          value=\"f\"\n        />\n\n        <Button\n          block\n          className=\"search-bar-btn\"\n          data-testid=\"exec-search-btn\"\n          onClick={ (e) => { filterRecipes(e); } }\n          variant=\"primary\"\n        >\n          Buscar\n        </Button>\n      </Form>\n      { show ? (\n        <Alert\n          style={ { marginTop: '20px' } }\n          variant=\"danger\"\n        >\n          {\n            (Date.now() % 2 === 0)\n              ? <Alert.Heading>Uai...</Alert.Heading>\n              : <Alert.Heading>Oxi...</Alert.Heading>\n          }\n          <p>O campo de busca de conter apenas a letra inicial</p>\n        </Alert>)\n        : '' }\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport ProfileIcon from './ProfileIcon';\nimport SearchBar from './SearchBar';\nimport searchSvg from '../images/searchIcon.svg';\nimport './Header.css';\n\nconst Header = () => {\n  const { pathname } = useLocation();\n\n  const renderHeader = useRef(() => {});\n\n  const [headerTitle, setHeaderTitle] = useState('Explorar');\n  const [searchIcon, setSearchIcon] = useState(false);\n  const [searchBar, setSearchBar] = useState(false);\n\n  renderHeader.current = () => {\n    switch (pathname) {\n    case '/bebidas':\n      setHeaderTitle('Bebidas');\n      setSearchIcon(true);\n      return;\n    case '/comidas':\n      setHeaderTitle('Comidas');\n      setSearchIcon(true);\n      return;\n    case '/explorar':\n      setHeaderTitle('Explorar');\n      return;\n    case '/explorar/comidas':\n      setHeaderTitle('Explorar Comidas');\n      return;\n    case '/explorar/bebidas':\n      setHeaderTitle('Explorar Bebidas');\n      return;\n    case '/explorar/comidas/ingredientes':\n      setHeaderTitle('Explorar Ingredientes');\n      return;\n    case '/explorar/bebidas/ingredientes':\n      setHeaderTitle('Explorar Ingredientes');\n      setSearchIcon(false);\n      return;\n    case '/explorar/comidas/area':\n      setHeaderTitle('Explorar Origem');\n      setSearchIcon(true);\n      return;\n    case '/perfil':\n      setHeaderTitle('Perfil');\n      return;\n    case '/receitas-feitas':\n      setHeaderTitle('Receitas Feitas');\n      return;\n    case '/receitas-favoritas':\n      setHeaderTitle('Receitas Favoritas');\n      break;\n    default:\n      break;\n    }\n  };\n\n  useEffect(() => {\n    renderHeader.current();\n  }, [pathname]);\n\n  return (\n    <header>\n      <Row className=\"header\">\n        <Col><ProfileIcon /></Col>\n        <Col><h1 data-testid=\"page-title\">{ headerTitle }</h1></Col>\n        <Col>\n          { searchIcon\n            && <img\n              role=\"presentation\"\n              data-testid=\"search-top-btn\"\n              src={ searchSvg }\n              alt=\"search-btn\"\n              onClick={ () => setSearchBar(!searchBar) }\n            /> }\n        </Col>\n      </Row>\n      { searchBar && <SearchBar /> }\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer-container\" data-testid=\"footer\">\n      <Row className=\"footer\">\n        <Col>\n          <Link to=\"/bebidas\">\n            <img\n              src={ drinkIcon }\n              alt=\"drinks icon\"\n              data-testid=\"drinks-bottom-btn\"\n            />\n          </Link>\n        </Col>\n        <Col>\n          <Link to=\"/explorar\">\n            <img\n              src={ exploreIcon }\n              alt=\"explore icon\"\n              data-testid=\"explore-bottom-btn\"\n            />\n          </Link>\n        </Col>\n        <Col>\n          <Link to=\"/comidas\">\n            <img\n              src={ mealIcon }\n              alt=\"meals icon\"\n              data-testid=\"food-bottom-btn\"\n            />\n          </Link>\n        </Col>\n      </Row>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Alert } from 'react-bootstrap';\nimport RecipeCard from '../components/RecipeCard';\nimport Loading from '../components/Loading';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { byAddIngredient, fetchCategories, fetchRecipes } from '../actions/recipes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.css';\n\nfunction Main({ location: { pathname } }) {\n  const {\n    list, isFetching, categories, byIngredient, filter,\n  } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const type = pathname.slice(1);\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n\n  const renderRecipes = () => {\n    if (list.length === 0) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return (\n        <Alert style={ { marginTop: '20px' } } variant=\"danger\">\n          {\n            (Date.now() % 2 === 0)\n              ? <Alert.Heading>Uai...</Alert.Heading>\n              : <Alert.Heading>Oxi...</Alert.Heading>\n          }\n          <p>Redefina o campo de busca.</p>\n        </Alert>\n      );\n    }\n    if (list.length === 1 && filter === '') {\n      history.push(`${pathname}/${list[0].id}`);\n      return;\n    }\n    return (\n      <section className=\"cards-container\">\n        {list.map((recipe, index) => (\n          <div className=\"cards-main\" key={ `recipe-${index}` }>\n            <RecipeCard\n              type={ type }\n              index={ index }\n              recipe={ recipe }\n            />\n          </div>\n        ))}\n      </section>\n    );\n  };\n\n  useEffect(() => {\n    const reqType = { request: 'filter', key: 'i', parameter: byIngredient };\n    const token = pathname === 'comidas' ? mealsToken : cocktailsToken;\n    dispatch(fetchCategories(token, type));\n    if (byIngredient) {\n      dispatch(fetchRecipes(token, type, reqType));\n      dispatch(byAddIngredient(''));\n    } else {\n      dispatch(fetchRecipes(token, type));\n    }\n  }, [pathname]);\n\n  return (\n    <>\n      <Header />\n      <nav className=\"nav-catogories\">\n        { categories\n          .map((category) => (\n            <CategoryButton\n              name={ category }\n              key={ `btn-${category}` }\n              type={ type }\n            />))}\n        <CategoryButton name=\"All\" type={ type } />\n      </nav>\n      { isFetching ? <Loading /> : renderRecipes() }\n      <Footer />\n    </>\n  );\n}\n\nMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Main;\n","import { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction Explore() {\n  return (\n    <>\n      <Header />\n      <section className=\"explore-button\">\n        <Link\n          data-testid=\"explore-food\"\n          to=\"/explorar/comidas\"\n        >\n          <Button\n            className=\"custom-btn-explore\"\n            block\n            variant=\"primary\"\n          >\n            Explorar Comidas\n          </Button>\n        </Link>\n        <Link\n          data-testid=\"explore-drinks\"\n          to=\"/explorar/bebidas\"\n        >\n          <Button\n            className=\"custom-btn-explore\"\n            block\n            variant=\"primary\"\n          >\n            Explorar Bebidas\n          </Button>\n        </Link>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default Explore;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchRecipes } from '../actions/recipes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreMain({ location: { pathname } }) {\n  const type = pathname.split('/')[2];\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n  const { list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const prevList = useRef(list);\n\n  const handleClick = () => {\n    const token = type === 'comidas' ? mealsToken : cocktailsToken;\n    dispatch(fetchRecipes(token, type, { request: 'random', key: '' }));\n  };\n\n  useEffect(() => {\n    if (list !== prevList.current) {\n      setId(list[0].id);\n    }\n    return () => setId('');\n  }, [list]);\n\n  return (\n    <>\n      <Header />\n      <section className=\"explore-button\">\n        <Link\n          data-testid=\"explore-by-ingredient\"\n          to={ `${pathname}/ingredientes` }\n        >\n          <Button\n            block\n            className=\"custom-btn-explore\"\n            variant=\"primary\"\n          >\n            Por Ingredientes\n          </Button>\n        </Link>\n        { (type === 'comidas') && (\n          <Link\n            data-testid=\"explore-by-area\"\n            to={ `${pathname}/area` }\n          >\n            <Button\n              block\n              className=\"custom-btn-explore\"\n              variant=\"primary\"\n            >\n              Por Local de Origem\n            </Button>\n          </Link>) }\n        <div className=\"surprise-me\">\n          <Button\n            block\n            className=\"custom-btn-explore\"\n            data-testid=\"explore-surprise\"\n            onClick={ handleClick }\n            type=\"button\"\n            variant=\"primary\"\n          >\n            Me Surpreenda!\n          </Button>\n        </div>\n        { id && <Redirect to={ `../${type}/${id}` } /> }\n      </section>\n      <Footer />\n    </>\n  );\n}\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExploreMain;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { byAddIngredient, fetchRecipes } from '../actions/recipes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreIngredients({ location: { pathname } }) {\n  const type = pathname.split('/')[2];\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n  const { list = [], isFetching } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  useEffect(() => {\n    const reqType = { request: 'list', key: 'i', parameter: 'list' };\n    const token = type === 'comidas' ? mealsToken : cocktailsToken;\n    dispatch(fetchRecipes(token, type, reqType));\n  }, []);\n\n  const handleClick = (ingredient) => {\n    setShouldRedirect(true);\n    dispatch(byAddIngredient(ingredient));\n  };\n\n  if (isFetching) return (<Loading />);\n  return (\n    <>\n      <Header />\n      <section className=\"cards-container\">\n        { type === 'comidas'\n          ? list.map(({ idIngredient, strIngredient }, index) => {\n            const url = `https://www.themealdb.com/images/ingredients/${strIngredient}-Small.png`;\n            return (\n              <Card\n                border=\"dark\"\n                className=\"card-explore\"\n                key={ idIngredient }\n              >\n                <button\n                  data-testid={ `${index}-ingredient-card` }\n                  onClick={ () => handleClick(strIngredient) }\n                  type=\"button\"\n                >\n                  <Card.Img\n                    alt={ `ingredient ${idIngredient}` }\n                    className=\"ingredients-img\"\n                    data-testid={ `${index}-card-img` }\n                    src={ url }\n                    variant=\"top\"\n                  />\n                  <Card.Body>\n                    <Card.Title\n                      data-testid={ `${index}-card-name` }\n                    >\n                      { strIngredient }\n                    </Card.Title>\n                  </Card.Body>\n                </button>\n              </Card>\n            );\n          })\n          : list.map(({ strIngredient1 }, index) => {\n            const url = `https://www.thecocktaildb.com/images/ingredients/${strIngredient1}-Small.png`;\n            return (\n              <Card\n                border=\"dark\"\n                className=\"card-explore\"\n                key={ strIngredient1 }\n              >\n                <button\n                  data-testid={ `${index}-ingredient-card` }\n                  onClick={ () => handleClick(strIngredient1) }\n                  type=\"button\"\n                >\n                  <Card.Img\n                    alt={ `ingredient ${strIngredient1}` }\n                    className=\"ingredients-img\"\n                    data-testid={ `${index}-card-img` }\n                    src={ url }\n                    variant=\"top\"\n                  />\n                  <Card.Body>\n                    <Card.Title\n                      data-testid={ `${index}-card-name` }\n                    >\n                      { strIngredient1 }\n                    </Card.Title>\n                  </Card.Body>\n                </button>\n              </Card>\n            );\n          }) }\n      </section>\n      { shouldRedirect && <Redirect to={ `/${type}` } /> }\n      <Footer />\n    </>\n  );\n}\n\nExploreIngredients.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExploreIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRecipes, fetchAreas } from '../actions/recipes';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreOrigin() {\n  const { list = [], isFetching, areas } = useSelector((state) => state.recipes);\n  const { mealsToken } = useSelector((state) => state.login);\n  const dispatch = useDispatch();\n  const [selectArea, setSelectArea] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchAreas(mealsToken));\n    dispatch(fetchRecipes(mealsToken, 'comidas'));\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setSelectArea(target.value);\n    const reqType = { request: 'filter', key: 'a', parameter: target.value };\n    dispatch(fetchRecipes(mealsToken, 'comidas', reqType));\n  };\n  if (isFetching || list.lenght === 0) return <Loading />;\n  return (\n    <>\n      <Header />\n      <Form className=\"form\">\n        <Form.Group controlId=\"select.countryForm\">\n          <Form.Label>Selecione o país:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            custom\n            data-testid=\"explore-by-area-dropdown\"\n            onChange={ handleChange }\n            value={ selectArea }\n          >\n            { areas && [{ strArea: 'All' }, ...areas.meals].map(({ strArea }) => (\n              <option\n                data-testid={ `${strArea}-option` }\n                key={ strArea }\n                value={ strArea }\n              >\n                { strArea }\n              </option>\n            )) }\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      <section className=\"cards-container\">\n        { list && list.map((recipe, index) => (\n          <div className=\"card-explore\" key={ `recipe-${index}` }>\n            <RecipeCard\n              type=\"comidas\"\n              index={ index }\n              recipe={ recipe }\n            />\n          </div>\n        ))}\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default ExploreOrigin;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport { startRecipe } from '../actions/recipes';\n\nfunction IngredientsList({ type, id, ingredients }) {\n  const start = useSelector((state) => state.recipes.start);\n  const { pathname } = useLocation();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const dispatch = useDispatch();\n  const [usedIngredients, setUsedIngredients] = useState(start[type][id] || []);\n\n  const handleChange = (index) => {\n    if (usedIngredients.includes(index)) {\n      setUsedIngredients([...usedIngredients].filter((ing) => ing !== index));\n    } else {\n      setUsedIngredients([...usedIngredients, index]);\n    }\n  };\n\n  useEffect(() => {\n    const { bebidas: cocktails, comidas: meals } = start;\n    localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails, meals }));\n  }, [start]);\n\n  useEffect(() => {\n    if (inProgress) {\n      dispatch(startRecipe(type, { [id]: usedIngredients }));\n    }\n  }, [usedIngredients]);\n\n  if (inProgress) {\n    return (\n      <Form>\n        { ingredients\n          .map((ingsAndMsr, index) => (\n            <Form.Check key={ `ing-${index}` } type=\"checkbox\">\n              <label\n                data-testid={ `${index}-ingredient-step` }\n                htmlFor={ [ingsAndMsr[0]] }\n              >\n                <Form.Check.Input\n                  checked={ usedIngredients.includes(index) }\n                  id={ [ingsAndMsr[0]] }\n                  onClick={ () => handleChange(index) }\n                  type=\"checkbox\"\n                  value={ [ingsAndMsr[0]] }\n                />\n                <Form.Check.Label>\n                  { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n                </Form.Check.Label>\n              </label>\n            </Form.Check>\n          ))}\n      </Form>\n    );\n  }\n\n  return (\n    <ul>\n      { ingredients\n        .map((ingsAndMsr, index) => (\n          <li\n            key={ `ing-${index}` }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n          >\n            { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n          </li>))}\n    </ul>\n  );\n}\n\nIngredientsList.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.array).isRequired,\n};\n\nexport default IngredientsList;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { Button } from 'react-bootstrap';\nimport { startRecipe, endRecipe } from '../actions/recipes';\nimport './ProgressButton.css';\n\nfunction ProgressButton({ type, id, ingredientsLength }) {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const { done, start, list } = useSelector((state) => state.recipes);\n  const refDone = useRef(done);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      dispatch(endRecipe(list[0]));\n      return;\n    }\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, { [id]: [] }));\n    }\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => {\n    if (refDone.current.length !== done.length) {\n      localStorage.setItem('doneRecipes', JSON.stringify(done));\n      history.push('/receitas-feitas');\n    }\n  }, [done]);\n\n  const buttonName = () => {\n    if (inProgress) return 'Finalizar Receita';\n    if (Object.keys(start[type]).includes(id)) return 'Continuar Receita';\n    return 'Iniciar Receita';\n  };\n\n  return (\n    done.some(\n      ({ id: currId, type: currType }) => id === currId && type.startsWith(currType),\n    )\n          || (\n            <Button\n              className=\"start\"\n              data-testid={ inProgress ? 'finish-recipe-btn' : 'start-recipe-btn' }\n              type=\"button\"\n              onClick={ handleClick }\n              disabled={ inProgress\n               && (start[type][id] || []).length !== ingredientsLength }\n              block\n            >\n              { buttonName() }\n            </Button>\n          )\n  );\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired,\n};\n\nexport default ProgressButton;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavorite, removeFavorite } from '../actions/recipes';\nimport FavIcon from '../images/whiteHeartIcon.svg';\nimport BlackFavIcon from '../images/blackHeartIcon.svg';\n\nfunction FavButton({ // type,\n  recipe, index }) {\n  const favorite = useSelector((state) => state.recipes.favorite);\n  const dispatch = useDispatch();\n  // const formatedType = type === 'Meal' ? 'comida' : 'bebida';\n\n  const handleClick = () => {\n    const fav = favorite\n      .find(\n        ({ id, type }) => recipe.id === id && type === recipe.type, // type.startsWith(currRec.type),\n      );\n    const { id, area, category, alcoholicOrNot, name, image, type } = recipe;\n    const favObj = { id, area, category, alcoholicOrNot, name, image, type };\n    if (fav) {\n      dispatch(removeFavorite(favObj));\n    } else dispatch(addFavorite(favObj));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favorite));\n  }, [favorite]);\n\n  return (\n    <button type=\"button\" onClick={ handleClick }>\n      <img\n        alt=\"favorite\"\n        data-testid={ index !== undefined\n          ? `${index}-horizontal-favorite-btn` : 'favorite-btn' }\n        src={ favorite\n          .some(({ id, type }) => recipe.id === id && type === recipe.type) // type.startsWith(rec.type))\n          ? BlackFavIcon : FavIcon }\n        style={ { width: '6vw' } }\n      />\n    </button>\n  );\n}\n\nFavButton.propTypes = {\n  recipe: PropTypes.shape().isRequired,\n  type: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FavButton;\n","import copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ShareIcon from '../images/shareIcon.svg';\n\nfunction ShareButton({ type, id, index }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleClick = async () => {\n    await copy(`http://localhost:3000/${type}/${id}`);\n    setCopied(true);\n  };\n\n  return (\n    <div>\n      <button\n        onClick={ handleClick }\n        type=\"button\"\n      >\n        <img\n          alt=\"share\"\n          data-testid={ index !== undefined\n            ? `${index}-horizontal-share-btn` : 'share-btn' }\n          src={ ShareIcon }\n          style={ { width: '6vw' } }\n        />\n      </button>\n      { copied && 'Link copiado!' }\n    </div>\n  );\n}\n\nShareButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default ShareButton;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Carousel from 'react-multi-carousel';\nimport { fetchRecipes, fetchRecommendations } from '../actions/recipes';\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport IngredientsList from '../components/IngredientsList';\nimport ProgressButton from '../components/ProgressButton';\nimport FavButton from '../components/FavButton';\nimport ShareButton from '../components/ShareButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './RecipeDetails.css';\nimport 'react-multi-carousel/lib/styles.css';\n\nfunction RecipeDetails({ match: { params }, location: { pathname } }) {\n  const { list, isFetching, recommendations } = useSelector((state) => state.recipes);\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n  const dispatch = useDispatch();\n  const [shouldFetch, setShouldFetch] = useState(true);\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const type = useRef(pathname.split('/')[1]);\n  const recommendationsType = useRef(type.current === 'comidas' ? 'bebidas' : 'comidas');\n\n  useEffect(() => {\n    const token = pathname === '/comidas' ? mealsToken : cocktailsToken;\n    setShouldFetch(true);\n    [type.current] = pathname.split('/').slice(1);\n    recommendationsType.current = type.current === 'comidas' ? 'bebidas' : 'comidas';\n    dispatch(fetchRecipes(token, type.current,\n      { request: 'lookup', key: 'i', parameter: params.id }));\n    dispatch(fetchRecommendations(token, recommendationsType.current));\n    setShouldFetch(false);\n  }, [params, pathname]);\n\n  const recipe = list[0];\n  const IngredientKeys = Object.keys(recipe || {})\n    .filter((ingKey) => (\n      ingKey\n        .startsWith('strIngredient')\n        && recipe[ingKey] !== '' && recipe[ingKey] !== null));\n  const IngredientsAndMeasures = IngredientKeys\n    .map((key, index) => [recipe[key], recipe[`strMeasure${index + 1}`]]);\n\n  const responsive = {\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 4,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 2,\n    },\n  };\n\n  return (\n    isFetching || shouldFetch || !recipe ? <Loading /> : (\n      <section>\n        <img\n          className=\"recipe-photo\"\n          data-testid=\"recipe-photo\"\n          src={ recipe.image }\n          alt={ recipe.name }\n        />\n        <header className=\"header-details\">\n          <h1 data-testid=\"recipe-title\">{ recipe.name }</h1>\n          <div>\n            <ShareButton type={ type.current } id={ params.id } />\n            <FavButton recipe={ recipe } />\n          </div>\n        </header>\n        <h2 className=\"header-title \" data-testid=\"recipe-category\">\n          { `${recipe.alcoholicOrNot} ${recipe.category}` }\n        </h2>\n        <section className=\"section-recipe\">\n          <IngredientsList\n            id={ params.id }\n            type={ type.current }\n            ingredients={ IngredientsAndMeasures }\n          />\n        </section>\n        <section className=\"section-recipe\">\n          <p data-testid=\"instructions\">{ recipe.strInstructions }</p>\n        </section>\n        { recipe.strYoutube\n        && <iframe\n          src={ recipe.strYoutube.split('watch?v=').join('embed/') }\n          title=\"Video\"\n          data-testid=\"video\"\n        /> }\n        { !inProgress && (\n          <Carousel className=\"carousel\" responsive={ responsive }>\n            { recommendations.map((recommendation, index) => (\n              <div\n                className=\"cards-recommendations\"\n                data-testid={ `${index}-recomendation-card` }\n                key={ `rec-${index}` }\n              >\n                <RecipeCard\n                  index={ index }\n                  recipe={ recommendation }\n                  recommendation\n                  type={ recommendationsType.current }\n                />\n              </div>\n            )) }\n          </Carousel>\n        )}\n        <ProgressButton\n          id={ params.id }\n          type={ type.current }\n          ingredientsLength={ IngredientsAndMeasures.length }\n        />\n      </section>\n    ));\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Profile.css';\n\nfunction Profile() {\n  const [userEmail, setUserEmail] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    setUserEmail(JSON.parse(localStorage.getItem('user') || '{}'));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <h4 className=\"email\" data-testid=\"profile-email\">{userEmail.email}</h4>\n      <section className=\"profile-container\">\n        <Button\n          block\n          className=\"custom-btn-profile\"\n          data-testid=\"profile-done-btn\"\n          onClick={ () => { history.push('/receitas-feitas'); } }\n          to=\"/receitas-feitas\"\n          type=\"button\"\n        >\n          Receitas Feitas\n        </Button>\n        <Button\n          block\n          className=\"custom-btn-profile\"\n          data-testid=\"profile-favorite-btn\"\n          onClick={ () => { history.push('/receitas-favoritas'); } }\n          type=\"button\"\n        >\n          Receitas Favoritas\n        </Button>\n        <Button\n          block\n          className=\"custom-btn-profile\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ () => {\n            localStorage.clear();\n            history.push('/');\n          } }\n          type=\"button\"\n        >\n          Sair\n        </Button>\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport ShareButton from '../components/ShareButton';\nimport FavButton from '../components/FavButton';\nimport Header from '../components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './RecipesDoneAndFavorite.css';\n\nfunction RecipesDoneAndFavorite({ location: { pathname } }) {\n  const { done, favorite } = useSelector((state) => state.recipes);\n  const [recipes, setRecipes] = useState([]);\n  const [isDone, setIsDone] = useState();\n  const [filter, setFilter] = useState('todos');\n\n  useEffect(() => {\n    if (pathname.endsWith('feitas')) {\n      setRecipes(done);\n      setIsDone(true);\n    } else {\n      setIsDone(false);\n      setRecipes(favorite);\n    }\n  }, [pathname, favorite]);\n\n  return (\n    <div>\n      <Header />\n      <Button\n        block\n        className=\"fav-done-btn custom-btn\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ () => setFilter('todos') }\n        type=\"button\"\n      >\n        All\n      </Button>\n      <nav className=\"nav-catogories\">\n        <Button\n          className=\"custom-btn\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => setFilter('comida') }\n          type=\"button\"\n        >\n          Food\n        </Button>\n        <Button\n          className=\"custom-btn\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => setFilter('bebida') }\n          type=\"button\"\n        >\n          Drinks\n        </Button>\n      </nav>\n      {recipes.filter(({ type }) => type === filter || filter === 'todos')\n        .map((recipe, index) => (\n          <div key={ recipe.id }>\n            <hr />\n            { console.log(recipe) }\n            <Link to={ `/${recipe.type}s/${recipe.id}` }>\n              <img\n                alt={ recipe.name }\n                className=\"fav-done-img\"\n                data-testid={ `${index}-horizontal-image` }\n                src={ recipe.image }\n              />\n              <h1\n                className=\"fav-done-title\"\n                data-testid={ `${index}-horizontal-name` }\n              >\n                { recipe.name }\n              </h1>\n            </Link>\n            <section className=\"fav-done-body\">\n              <div className=\"fav-done-info\">\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { recipe.type.startsWith('comida')\n                  && `${recipe.area} - ${recipe.category}` }\n                  { recipe.type.startsWith('bebida') && recipe.alcoholicOrNot }\n                </p>\n                { isDone && (\n                  <p data-testid={ `${index}-horizontal-done-date` }>\n                    {recipe.doneDate}\n                  </p>\n                )}\n                {isDone && (\n                  recipe.tags.map((tag, tagIndex) => (\n                    <p\n                      key={ `${recipe.id}-tag-${tagIndex}` }\n                      data-testid={ `${index}-${tag}-horizontal-tag` }\n                    >\n                      { tag }\n                    </p>\n                  ))\n                )}\n              </div>\n              <div className=\"icon-container\">\n                <ShareButton\n                  id={ recipe.id }\n                  index={ index }\n                  type={ `${recipe.type}s` }\n                />\n                <FavButton\n                  index={ index }\n                  recipe={ recipe }\n                  type={ `${recipe.type}s` }\n                />\n              </div>\n            </section>\n          </div>\n        ))}\n    </div>\n\n  );\n}\n\nRecipesDoneAndFavorite.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipesDoneAndFavorite;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './NotFound.css';\n\nfunction NotFound() {\n  return (\n    <div className=\"container-404\">\n      <h1 className=\"container-404-title\">404</h1>\n      <h2 className=\"container-404-title\">Not Found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Explore from './pages/Explore';\nimport ExploreMain from './pages/ExploreMain';\nimport ExploreIngredients from './pages/ExploreIngredients';\nimport ExploreOrigin from './pages/ExploreOrigin';\nimport RecipeDetails from './pages/RecipeDetails';\nimport Profile from './pages/Profile';\nimport RecipesDoneAndFavorite from './pages/RecipesDoneAndFavorite';\nimport NotFound from './pages/NotFound';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        path=\"/bebidas/:id/in-progress\"\n        render={ (props) => <RecipeDetails { ...props } /> }\n      />\n      <Route\n        path=\"/comidas/:id/in-progress\"\n        render={ (props) => <RecipeDetails { ...props } /> }\n      />\n      <Route path=\"/bebidas/:id\" render={ (props) => <RecipeDetails { ...props } /> } />\n      <Route path=\"/comidas/:id\" render={ (props) => <RecipeDetails { ...props } /> } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ ExploreIngredients } />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ ExploreIngredients } />\n      <Route path=\"/explorar/comidas/area\" component={ ExploreOrigin } />\n      <Route path=\"/explorar/comidas\" component={ ExploreMain } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreMain } />\n      <Route path=\"/receitas-feitas\" component={ RecipesDoneAndFavorite } />\n      <Route path=\"/receitas-favoritas\" component={ RecipesDoneAndFavorite } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route path=\"/bebidas\" component={ Main } />\n      <Route path=\"/comidas\" component={ Main } />\n      <Route path=\"/perfil\" component={ Profile } />\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"*\" component={ NotFound } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_TOKEN_DRINK, ADD_TOKEN_MEAL, ADD_USER } from '../actions';\n\nconst savedMealsToken = JSON.parse(localStorage.getItem('mealsToken') || '1');\nconst savedCocktailsToken = JSON.parse(localStorage.getItem('cocktailsToken') || '1');\n\nconst INITIAL_STATE = {\n  mealsToken: savedMealsToken,\n  cocktailsToken: savedCocktailsToken,\n  email: '',\n};\n\nconst login = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_TOKEN_MEAL:\n    return { ...state, mealsToken: action.payload };\n  case ADD_TOKEN_DRINK:\n    return { ...state, cocktailsToken: action.payload };\n  case ADD_USER:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default login;\n","import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES,\n  ADD_RECOMMENDATIONS, END_RECIPE, REQUEST_RECIPES, RM_FAVORITE,\n  START_RECIPE, ADD_BYINGREDIENT, ADD_COUNTRIES } from '../actions';\n\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes') || '{}');\nconst favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes') || '[]');\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes') || '[]');\n\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n  start: { comidas: inProgressRecipes.meals || {},\n    bebidas: inProgressRecipes.cocktails || {} },\n  done: doneRecipes,\n  favorite: favoriteRecipes,\n  byIngredient: '',\n  areas: { meals: [] },\n};\n\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  const doneDate = new Date();\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case ADD_RECIPES:\n    return { ...state, isFetching: false, list: action.payload.slice(0, MAX_RECIPES) };\n  case ADD_CATEGORIES:\n    return { ...state, categories: action.payload };\n  case ADD_FILTER:\n    return { ...state, filter: action.payload };\n  case ADD_RECOMMENDATIONS:\n    return { ...state, recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS) };\n  case START_RECIPE:\n    return { ...state,\n      start: { ...state.start,\n        [action.selectedType]:\n          { ...state.start[action.selectedType], ...action.payload } } };\n  case END_RECIPE:\n    return { ...state,\n      done: [...state.done,\n        { ...action.payload, doneDate: doneDate.toLocaleDateString('pt-Br') }] };\n  case ADD_FAVORITE:\n    return { ...state, favorite: [...state.favorite, action.payload] };\n  case RM_FAVORITE:\n    return { ...state,\n      favorite: [...state.favorite\n        .filter(({ id, type }) => id !== action.payload.id\n          || type !== action.payload.type)] };\n  case ADD_BYINGREDIENT:\n    return { ...state, byIngredient: action.payload };\n  case ADD_COUNTRIES:\n    return { ...state, areas: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport recipes from './recipes';\n\nconst rootReducer = combineReducers({\n  login,\n  recipes,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";"],"sourceRoot":""}